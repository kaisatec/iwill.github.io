<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iwill]]></title>
  <subtitle><![CDATA[i'm iwill]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://iwill.im//"/>
  <updated>2014-04-25T01:03:23.601Z</updated>
  <id>http://iwill.im//</id>
  
  <author>
    <name><![CDATA[iwill]]></name>
    <email><![CDATA[i at iwill dot im]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[使用 Hexo 搭建 GitHub Pages]]></title>
    <link href="http://iwill.im/2014-04-20-blogging-with-hexo.html"/>
    <id>http://iwill.im/2014-04-20-blogging-with-hexo.html</id>
    <published>2014-04-20T04:35:58.000Z</published>
    <updated>2014-04-25T01:02:43.000Z</updated>
    <content type="html"><![CDATA[<p>2009 年 <a href="https://github.com/zigzag" target="_blank">Zigzag</a> 就教了我怎么用 <a href="https://pages.github.com/" target="_blank">GitHub Pages</a> 写博客 —— 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank">Markdown</a> 撰写、转成 HTML、发布到 GitHub。当时觉得很酷，可后来一直没写 …. 现在他去天堂写代码已经快满 4 年了，为了避免被我对不起的 Zig 带走，上周末终于搭起自己的博客 <a href="/" title="iwill">iwill.im</a>。</p>
<p>因为看到我订阅的博客多半是用 <a href="http://octopress.org/" target="_blank">Octopress</a> 搭建的，所以认定这是个高大上。但是貌似是 XCode 升级到 5.1.1 导致 Ruby 的一些东西不正常了，一直安装失败，GitHub Pages 推荐的 <a href="http://jekyllrb.com/" title="Jekyll &bull; Simple, blog-aware, static sites" target="_blank">Jekyll</a> 也一样，折腾大半天搞不定，非 Ruby Fan 实在无法坚持了。装 B 不成、最终选了 <a href="http://hexo.io/" target="_blank">Hexo</a> [hekso] - <code>A fast, simple &amp; powerful blog framework, powered by Node.js</code>，据说与前者的使用很相似。不熟悉 Javascript 也没关系，只要不改模版基本不会碰到 Javascript。</p>
<h2 id="安装_Node-js_&amp;_NPM">安装 Node.js &amp; NPM</h2>
<p>首先建议安装 <a href="http://brew.sh/" title="The missing package manager for OS X" target="_blank">Homebrew</a> - <code>The missing package manager for OS X</code>。感觉叫 <code>missing</code> 的都是极品，比如 <a href="http://macromates.com/" title="The missing editor for Mac OS X" target="_blank">TextMate</a> - <code>The missing editor for Mac OS X</code>。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)</span>"</span>
</pre></td></tr></table></figure>

<p>安装 <a href="http://nodejs.org/" target="_blank">Node.js</a> - 服务端的 Javascript，以及 <a href="https://npmjs.org/" title="Node Packaged Modules" target="_blank">npm</a> - Node Packaged Modules。npm 是前者的 Package Manager，会随 Node.js 一同安装。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>brew install node
</pre></td></tr></table></figure>

<h2 id="Hexo">Hexo</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>npm install hexo -g <span class="comment"># 安装 Hexo</span>
hexo init iwill.im && <span class="built_in">cd</span> iwill.im <span class="comment"># 初始化 Workspace，名字随意</span>
hexo generate <span class="comment"># 从 Markdown 生成静态文件，初始化时会生成一个 Hello World</span>
hexo server <span class="comment"># 启动本地 Server</span>
</pre></td></tr></table></figure>

<p>可以访问 <a href="http://localhost:4000/" target="_blank">http://localhost:4000/</a> 查看效果，修改 Markdown 无需重新 Server。</p>
<p>Hexo Workspace 的 <a href="http://hexo.io/docs/setup.html" target="_blank">目录结构</a> 如下，其中 <code>_config.yml</code> 是 <a href="http://hexo.io/docs/configuration.html" title="Configuration | Hexo" target="_blank">配置文件</a>：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre>1
2
3
4
5
6
7
8
9
</pre></td><td class="code"><pre>.
├── _config.yml
├── package.json
├── scaffolds
├── scripts
├── source
<span class="string">|   ├── _drafts</span>
<span class="string">|   └── _posts</span>
└── themes
</pre></td></tr></table></figure>

<p>建议随时备份 Hexo Workspace，Dropbox 或者 GitHub，这有 Hexo 的 <a href="https://github.com/tommy351/hexo/blob/master/.gitignore" target="_blank">.gitignore</a>。</p>
<p>Hexo 的命令也很简单，可以通过 <code>hexo help</code> 查看，下面是最常用的几个命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre>hexo n [draft] <span class="string">"blog-title"</span> <span class="comment"># n - new，新建博客/草稿</span>
hexo p <span class="string">"blog-title"</span> <span class="comment"># p - publish，发布草稿</span>
hexo s <span class="operator">-d</span> <span class="comment"># s - server、-d - draft，启动本地 Server，并预览草稿</span>
hexo d -g <span class="comment"># d - deploy、-g - generate，从 Markdown 生成静态文件，然后发布到 GitHub Pages</span>
</pre></td></tr></table></figure>

<p>更多参考 <a href="http://hexo.io/docs/" title="Documentation | Hexo" target="_blank">Hexo Documentation</a>。</p>
<h2 id="Hexo_插件">Hexo 插件</h2>
<p>Hexo 天生支持 <a href="http://disqus.com/" title="Disqus &ndash; The Web&rsquo;s Community of Communities" target="_blank">DISQUS</a> 的评论功能，在 <code>_config.yml</code> 中设置 <code>disqus_shortname</code> 即可。</p>
<p>我现在只用到 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank">RSS</a> 和 <a href="https://github.com/wsk3201/hexo-local-image" target="_blank">图片</a> 插件。</p>
<p>更多参考 <a href="https://github.com/tommy351/hexo/wiki/Plugins" target="_blank">Hexo Plugins</a>。</p>
<h2 id="Hexo_模版">Hexo 模版</h2>
<p>Hexo 的模版不多，我用的是 <a href="http://hexo.io/hexo-theme-light/" target="_blank">Light</a>。</p>
<p>模版有单独的配置文件 <code>themes/light/_config.yml</code>。在这里可以添加页面、链接，比如 About、RSS，还可以设置 <a href="http://www.addthis.com/" title="Personalized widgets at your finger tips. | AddThis" target="_blank">AddThis</a> 以便分享、传播。</p>
<p>需要注意的是 Light 默认使用的是 Facebook 的评论，会与 Hexo 里内置的 DISQUS 冲突，导致两者都无法正常显示。鉴于墙的存在，建议把 <code>themes/light/_config.yml</code> 中的 Facebook 相关的设置注释掉，而且 DISQUS 更好用。</p>
<p>更多参考 <a href="https://github.com/tommy351/hexo/wiki/Themes" target="_blank">Hexo Themes</a>。</p>
<h2 id="GitHub_Pages">GitHub Pages</h2>
<p>现在本地的博客已经搭建起来了，下一步是发布到 GitHub。</p>
<ol>
<li><p>在 GitHub 上 <a href="https://github.com/new" target="_blank">创建一个 repo</a>，格式是 <code>username</code>.github.io。</p>
</li>
<li><p>打开 Hexo 配置文件 <code>_config.yml</code>，设置博客 url 和 deploy 相关参数：</p>
</li>
</ol>
<figure class="highlight yml"><table><tr><td class="gutter"><pre>1
2
3
4
</pre></td><td class="code"><pre><span class="label">url:</span> http://iwill<span class="preprocessor">.github</span><span class="preprocessor">.io</span>/
<span class="label">deploy:</span>
  type: github
  repo: https://github<span class="preprocessor">.com</span>/iwill/iwill<span class="preprocessor">.github</span><span class="preprocessor">.io</span><span class="preprocessor">.git</span>
</pre></td></tr></table></figure>

<ol>
<li>发布静态文件到 GitHub：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre>1
</pre></td><td class="code"><pre>hexo <span class="operator">-d</span>
</pre></td></tr></table></figure>

<p>访问 <a href="https://github.com/iwill/iwill.github.io" target="_blank">https://github.com/iwill/iwill.github.io</a> 可以看见刚刚发布上去的静态文件，访问 <a href="http://iwill.github.io" target="_blank">http://iwill.github.io</a> 就可以看见博客了！</p>
<p>更多参考 <a href="https://pages.github.com/" target="_blank">GitHub Pages</a>。</p>
<h2 id="使用个性域名">使用个性域名</h2>
<p>没有域名可以去 <a href="https://domai.nr/" target="_blank">https://domai.nr/</a> 找一个注册，之后做如下设置：</p>
<ol>
<li><p>Hexo 的配置文件中的 url 设置为完整的博客地址，如 <code>http://iwill.im/</code>。</p>
</li>
<li><p>在 Hexo Workspace 的 Source 目录下创建名为 CNAME 的文本文件、写入域名，如 <code>iwill.im</code>。</p>
</li>
<li><p>然后执行 <code>hexo d -g</code> 将上面设置发布到 GitHub Pages 上。</p>
</li>
<li><p>在域名服务后台设置域名跳转，注意子域名 (如 <code>www.iwill.im</code>、<code>blog.iwill.im</code>) 和顶级域名 (如 <code>iwill.im</code>) 的设置有所不同，需仔细阅读下面说明进行设置、校验：<br> <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#subdomains" target="_blank">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#subdomains</a><br> <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#apex-domains" target="_blank">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#apex-domains</a><br> 这是我的设置：<br><img src="/images/blogging-with-hexo-domain-settings.png" alt="image"></p>
</li>
</ol>
<h2 id="写博客">写博客</h2>
<p>到这才发现，写博客才是最困难的。既然要写、那就要坚持吧！</p>
]]></content>
    
    
      <category term="hexo" scheme="http://iwill.im/tags/hexo/"/>
    
      <category term="blog" scheme="http://iwill.im/tags/blog/"/>
    
      <category term="domain" scheme="http://iwill.im/tags/domain/"/>
    
      <category term="github-pages" scheme="http://iwill.im/tags/github-pages/"/>
    
  </entry>
  
</feed>
